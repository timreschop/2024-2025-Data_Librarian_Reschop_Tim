Search.setIndex({"alltitles": {"1. Arithmetik und Variablen": [[1, null], [3, null], [4, null]], "2. Datentypen": [[14, null]], "3. Module": [[15, null], [16, null]], "4. pandas und matplotlib": [[17, null]], "Arithmetik": [[1, "arithmetik"], [3, "arithmetik"], [4, "arithmetik"]], "Beispielhaft k\u00f6nnte das so aussehen:": [[17, "beispielhaft-konnte-das-so-aussehen"]], "Bibliotheken installieren": [[15, "bibliotheken-installieren"], [16, "bibliotheken-installieren"]], "Booleans": [[7, null], [7, "id1"], [14, "booleans"]], "Booleans sind ein Datentyp, der nur zwei Werte annehmen kann. Entweder True oder False. Sie repr\u00e4sentieren den Wahrheitswert eine Aussage. Auch diesen Datentyp kannst du mit der Funktion type(\u2026) \u00fcberpr\u00fcfen:": [[7, "booleans-sind-ein-datentyp-der-nur-zwei-werte-annehmen-kann-entweder-true-oder-false-sie-reprasentieren-den-wahrheitswert-eine-aussage-auch-diesen-datentyp-kannst-du-mit-der-funktion-type-uberprufen"], [14, "booleans-sind-ein-datentyp-der-nur-zwei-werte-annehmen-kann-entweder-true-oder-false-sie-reprasentieren-den-wahrheitswert-eine-aussage-auch-diesen-datentyp-kannst-du-mit-der-funktion-type-uberprufen"]], "Booleans werden h\u00e4ufig in Bedingungsanweisungen (if, else) verwendet (also z.B. \u201cWenn x gr\u00f6\u00dfer ist als 4 (d.h. x > 4 = True), dann tue dies, wenn nicht (d.h. x > 4 = False), dann tue dies\u2026). Bedingungsanweisungen sind schon eine fortgeschrittene Technik, die wir zun\u00e4chst nicht betrachten.": [[7, "booleans-werden-haufig-in-bedingungsanweisungen-if-else-verwendet-also-z-b-wenn-x-groszer-ist-als-4-d-h-x-4-true-dann-tue-dies-wenn-nicht-d-h-x-4-false-dann-tue-dies-bedingungsanweisungen-sind-schon-eine-fortgeschrittene-technik-die-wir-zunachst-nicht-betrachten"], [14, "booleans-werden-haufig-in-bedingungsanweisungen-if-else-verwendet-also-z-b-wenn-x-groszer-ist-als-4-d-h-x-4-true-dann-tue-dies-wenn-nicht-d-h-x-4-false-dann-tue-dies-bedingungsanweisungen-sind-schon-eine-fortgeschrittene-technik-die-wir-zunachst-nicht-betrachten"]], "Collections f\u00fcr Variablen": [[13, null]], "Da Python mit verschiedenen Modulen bzw. Bibliotheken arbeitet, musst du diese aber zun\u00e4chst installieren und importieren, bevor Funktionen und Code verwenden kannst, der entsprechende Module benutzt, die nicht schon in Python vorinstalliert sind.": [[15, "da-python-mit-verschiedenen-modulen-bzw-bibliotheken-arbeitet-musst-du-diese-aber-zunachst-installieren-und-importieren-bevor-funktionen-und-code-verwenden-kannst-der-entsprechende-module-benutzt-die-nicht-schon-in-python-vorinstalliert-sind"], [16, "da-python-mit-verschiedenen-modulen-bzw-bibliotheken-arbeitet-musst-du-diese-aber-zunachst-installieren-und-importieren-bevor-funktionen-und-code-verwenden-kannst-der-entsprechende-module-benutzt-die-nicht-schon-in-python-vorinstalliert-sind"]], "Da wir nun die beiden Bibliotheken importiert haben, k\u00f6nnen wir mit ihnen arbeiten. Mit pandas kann man Daten in eine tabellarische Form, einen sog. DataFrame umwandeln und analysieren und anschlie\u00dfend mit matplotlib visualisieren.": [[17, "da-wir-nun-die-beiden-bibliotheken-importiert-haben-konnen-wir-mit-ihnen-arbeiten-mit-pandas-kann-man-daten-in-eine-tabellarische-form-einen-sog-dataframe-umwandeln-und-analysieren-und-anschlieszend-mit-matplotlib-visualisieren"]], "Dictionaries": [[12, null]], "Die Datei enth\u00e4lt Zeitstempel und Kursver\u00e4nderung einer Aktie zu bestimmten Zeitpunkten. Wenn wir bpsw. nur Daten f\u00fcr einen ganz bestimmten Zeitraum sehen wollen, k\u00f6nnen wir den DataFrame mit der Funktion loc() dementsprechend filtern und wieder in einen neuen DataFrame abspeichern:": [[17, "die-datei-enthalt-zeitstempel-und-kursveranderung-einer-aktie-zu-bestimmten-zeitpunkten-wenn-wir-bpsw-nur-daten-fur-einen-ganz-bestimmten-zeitraum-sehen-wollen-konnen-wir-den-dataframe-mit-der-funktion-loc-dementsprechend-filtern-und-wieder-in-einen-neuen-dataframe-abspeichern"]], "Du kannst das #-Symbol verwenden, um Deinen Code zu kommentieren, d.h. dass alles hinter dem #-Symbol nicht als Code ausgef\u00fchrt wird. Kommmentare sind sehr hilfreich, um dem Code direkt eine Erkl\u00e4rung zum besseren Verst\u00e4ndnis hinzuzuf\u00fcgen.": [[1, "du-kannst-das-symbol-verwenden-um-deinen-code-zu-kommentieren-d-h-dass-alles-hinter-dem-symbol-nicht-als-code-ausgefuhrt-wird-kommmentare-sind-sehr-hilfreich-um-dem-code-direkt-eine-erklarung-zum-besseren-verstandnis-hinzuzufugen"], [3, "du-kannst-das-symbol-verwenden-um-deinen-code-zu-kommentieren-d-h-dass-alles-hinter-dem-symbol-nicht-als-code-ausgefuhrt-wird-kommmentare-sind-sehr-hilfreich-um-dem-code-direkt-eine-erklarung-zum-besseren-verstandnis-hinzuzufugen"], [4, "du-kannst-das-symbol-verwenden-um-deinen-code-zu-kommentieren-d-h-dass-alles-hinter-dem-symbol-nicht-als-code-ausgefuhrt-wird-kommmentare-sind-sehr-hilfreich-um-dem-code-direkt-eine-erklarung-zum-besseren-verstandnis-hinzuzufugen"]], "Eine der am meisten verwendeten Bibliotheken sind pandas und matplotlib, die insbesondere zur Datenverarbeitung, -analyse und -visualisierung verwendet werden. Hier zeigen wir dir beide Wege der Installation einmal exemplarisch:": [[15, "eine-der-am-meisten-verwendeten-bibliotheken-sind-pandas-und-matplotlib-die-insbesondere-zur-datenverarbeitung-analyse-und-visualisierung-verwendet-werden-hier-zeigen-wir-dir-beide-wege-der-installation-einmal-exemplarisch"], [16, "eine-der-am-meisten-verwendeten-bibliotheken-sind-pandas-und-matplotlib-die-insbesondere-zur-datenverarbeitung-analyse-und-visualisierung-verwendet-werden-hier-zeigen-wir-dir-beide-wege-der-installation-einmal-exemplarisch"]], "Es gibt sehr viele weitere Bibliotheken, die in der Standardversion von Python noch nicht enthalten sind. Die Ver\u00f6ffentlichungen von Python-Bibliotheken werden i.d.R. auf https://pypi.org ver\u00f6ffentlicht": [[15, "es-gibt-sehr-viele-weitere-bibliotheken-die-in-der-standardversion-von-python-noch-nicht-enthalten-sind-die-veroffentlichungen-von-python-bibliotheken-werden-i-d-r-auf-https-pypi-org-veroffentlicht"], [16, "es-gibt-sehr-viele-weitere-bibliotheken-die-in-der-standardversion-von-python-noch-nicht-enthalten-sind-die-veroffentlichungen-von-python-bibliotheken-werden-i-d-r-auf-https-pypi-org-veroffentlicht"]], "Funktionen von pandas k\u00f6nnen jetzt \u00fcber das K\u00fcrzel pd abgerufen werden.": [[15, "funktionen-von-pandas-konnen-jetzt-uber-das-kurzel-pd-abgerufen-werden"], [16, "funktionen-von-pandas-konnen-jetzt-uber-das-kurzel-pd-abgerufen-werden"]], "Grunds\u00e4tzlich gibt es zwei wichtige numerische Datenypen: Ganzzahlen (int), die Du schon kennst, und Flie\u00dfkommazahlen (float) also Dezimalzahlen. Wichtig: In Python ist das Dezimalzeichen ein Punkt, kein Komma.": [[5, "grundsatzlich-gibt-es-zwei-wichtige-numerische-datenypen-ganzzahlen-int-die-du-schon-kennst-und-flieszkommazahlen-float-also-dezimalzahlen-wichtig-in-python-ist-das-dezimalzeichen-ein-punkt-kein-komma"], [8, "grundsatzlich-gibt-es-zwei-wichtige-numerische-datenypen-ganzzahlen-int-die-du-schon-kennst-und-flieszkommazahlen-float-also-dezimalzahlen-wichtig-in-python-ist-das-dezimalzeichen-ein-punkt-kein-komma"], [14, "grundsatzlich-gibt-es-zwei-wichtige-numerische-datenypen-ganzzahlen-int-die-du-schon-kennst-und-flieszkommazahlen-float-also-dezimalzahlen-wichtig-in-python-ist-das-dezimalzeichen-ein-punkt-kein-komma"]], "HINWEIS: Du musst in Python den Datentyp beim Erstellen einer Variable nicht explizit angeben. Als dynamische Sprache erkennt Python automatisch den Datentyp der Variablen basierend auf dem zugewiesenen Wert. Das gilt f\u00fcr alles Datentypen, nicht nur f\u00fcr numerische Datentypen. Hier ein Beispiel:": [[5, "hinweis-du-musst-in-python-den-datentyp-beim-erstellen-einer-variable-nicht-explizit-angeben-als-dynamische-sprache-erkennt-python-automatisch-den-datentyp-der-variablen-basierend-auf-dem-zugewiesenen-wert-das-gilt-fur-alles-datentypen-nicht-nur-fur-numerische-datentypen-hier-ein-beispiel"], [8, "hinweis-du-musst-in-python-den-datentyp-beim-erstellen-einer-variable-nicht-explizit-angeben-als-dynamische-sprache-erkennt-python-automatisch-den-datentyp-der-variablen-basierend-auf-dem-zugewiesenen-wert-das-gilt-fur-alles-datentypen-nicht-nur-fur-numerische-datentypen-hier-ein-beispiel"], [14, "hinweis-du-musst-in-python-den-datentyp-beim-erstellen-einer-variable-nicht-explizit-angeben-als-dynamische-sprache-erkennt-python-automatisch-den-datentyp-der-variablen-basierend-auf-dem-zugewiesenen-wert-das-gilt-fur-alles-datentypen-nicht-nur-fur-numerische-datentypen-hier-ein-beispiel"]], "Im ersten Kapitel hast Du bereits Integer- und *String-*Variablen kennengelernt. In Python gibt es verschiedene Datentypen, die in Variablen abgespeichert werden k\u00f6nnen. Integers (Ganze Zahlen) und Strings (Zeichenfolgen in \u201c\u2026\u201d) sind nur zwei Beispiele f\u00fcr Datentypen, die eine Variable annehmen kann. In diesem Kapitel lernst du weitere bzw. die g\u00e4ngigsten Datentypen in Python kennen.": [[14, "im-ersten-kapitel-hast-du-bereits-integer-und-string-variablen-kennengelernt-in-python-gibt-es-verschiedene-datentypen-die-in-variablen-abgespeichert-werden-konnen-integers-ganze-zahlen-und-strings-zeichenfolgen-in-sind-nur-zwei-beispiele-fur-datentypen-die-eine-variable-annehmen-kann-in-diesem-kapitel-lernst-du-weitere-bzw-die-gangigsten-datentypen-in-python-kennen"]], "In der folgenden Zelle findest Du einige Bespiele f\u00fcr solche Aufgaben, wobei der Befehl print(\u2026) verwendet wird, um eine Ausgabe erzeugen zu lassen.": [[1, "in-der-folgenden-zelle-findest-du-einige-bespiele-fur-solche-aufgaben-wobei-der-befehl-print-verwendet-wird-um-eine-ausgabe-erzeugen-zu-lassen"], [3, "in-der-folgenden-zelle-findest-du-einige-bespiele-fur-solche-aufgaben-wobei-der-befehl-print-verwendet-wird-um-eine-ausgabe-erzeugen-zu-lassen"], [4, "in-der-folgenden-zelle-findest-du-einige-bespiele-fur-solche-aufgaben-wobei-der-befehl-print-verwendet-wird-um-eine-ausgabe-erzeugen-zu-lassen"]], "In seinen grundlegendsten Funktion kann Python wie ein Taschenrechner verwendet werden - also ganz basal f\u00fcr Addition, Multiplikation, Subtraktion und Division, aber auch weitaus komplexere Berechnungen.": [[1, "in-seinen-grundlegendsten-funktion-kann-python-wie-ein-taschenrechner-verwendet-werden-also-ganz-basal-fur-addition-multiplikation-subtraktion-und-division-aber-auch-weitaus-komplexere-berechnungen"], [3, "in-seinen-grundlegendsten-funktion-kann-python-wie-ein-taschenrechner-verwendet-werden-also-ganz-basal-fur-addition-multiplikation-subtraktion-und-division-aber-auch-weitaus-komplexere-berechnungen"], [4, "in-seinen-grundlegendsten-funktion-kann-python-wie-ein-taschenrechner-verwendet-werden-also-ganz-basal-fur-addition-multiplikation-subtraktion-und-division-aber-auch-weitaus-komplexere-berechnungen"]], "Listen": [[9, null]], "Man k\u00f6nnte nun z.B. die Funktion sort_values() von pandas verwenden, um die Daten nach den Werten einer bestimmten Spalte zu sortieren. In diesem Fall nehmen wir das Alter und lassen es absteigend sortieren:": [[17, "man-konnte-nun-z-b-die-funktion-sort-values-von-pandas-verwenden-um-die-daten-nach-den-werten-einer-bestimmten-spalte-zu-sortieren-in-diesem-fall-nehmen-wir-das-alter-und-lassen-es-absteigend-sortieren"]], "Mit Python kann man im Grunde alles von Grund auf neu programmieren. Es gibt allerdings schon sehr viel Code, der bereits von anderen Python-Nutzern umgesetzt wurde. Wenn dieser Code online ver\u00f6ffentlicht wurde, kannst auch Du ihn nutzen und f\u00fcr deine Zwecke anpassen.": [[15, "mit-python-kann-man-im-grunde-alles-von-grund-auf-neu-programmieren-es-gibt-allerdings-schon-sehr-viel-code-der-bereits-von-anderen-python-nutzern-umgesetzt-wurde-wenn-dieser-code-online-veroffentlicht-wurde-kannst-auch-du-ihn-nutzen-und-fur-deine-zwecke-anpassen"], [16, "mit-python-kann-man-im-grunde-alles-von-grund-auf-neu-programmieren-es-gibt-allerdings-schon-sehr-viel-code-der-bereits-von-anderen-python-nutzern-umgesetzt-wurde-wenn-dieser-code-online-veroffentlicht-wurde-kannst-auch-du-ihn-nutzen-und-fur-deine-zwecke-anpassen"]], "Mit der Funktion type(\u2026) kannst Du dir ausgeben lassen, welchen Datentyp eine Variable hat.": [[5, "mit-der-funktion-type-kannst-du-dir-ausgeben-lassen-welchen-datentyp-eine-variable-hat"], [8, "mit-der-funktion-type-kannst-du-dir-ausgeben-lassen-welchen-datentyp-eine-variable-hat"], [14, "mit-der-funktion-type-kannst-du-dir-ausgeben-lassen-welchen-datentyp-eine-variable-hat"]], "Numerische Datentypen": [[5, "id1"], [8, "numerische-datentypen"], [14, "numerische-datentypen"]], "Nun sind unsere Daten in einer sauberen tabellarischen Form unter der Variablen df abgespeichert": [[17, "nun-sind-unsere-daten-in-einer-sauberen-tabellarischen-form-unter-der-variablen-df-abgespeichert"]], "Sets": [[11, null]], "Strings": [[6, null], [6, "id1"], [9, "strings"], [11, "strings"], [14, "strings"]], "Strings sind Zeichenfolgen (Buchstaben, Symbole, aber auch Zahlen usw.). Strings werden erstellt, indem man die Zeichenfolge in einfache oder doppelte Anf\u00fchrungszeichen einschlie\u00dft, so wie hier:": [[6, "strings-sind-zeichenfolgen-buchstaben-symbole-aber-auch-zahlen-usw-strings-werden-erstellt-indem-man-die-zeichenfolge-in-einfache-oder-doppelte-anfuhrungszeichen-einschlieszt-so-wie-hier"], [9, "strings-sind-zeichenfolgen-buchstaben-symbole-aber-auch-zahlen-usw-strings-werden-erstellt-indem-man-die-zeichenfolge-in-einfache-oder-doppelte-anfuhrungszeichen-einschlieszt-so-wie-hier"], [11, "strings-sind-zeichenfolgen-buchstaben-symbole-aber-auch-zahlen-usw-strings-werden-erstellt-indem-man-die-zeichenfolge-in-einfache-oder-doppelte-anfuhrungszeichen-einschlieszt-so-wie-hier"], [14, "strings-sind-zeichenfolgen-buchstaben-symbole-aber-auch-zahlen-usw-strings-werden-erstellt-indem-man-die-zeichenfolge-in-einfache-oder-doppelte-anfuhrungszeichen-einschlieszt-so-wie-hier"]], "Tupel": [[10, null]], "Tutorial": [[0, null]], "Um Bibliotheken von PyPi zu installieren, kannst du pip verwenden. Du kannst pip direkt aus Python heraus in deinem Notebook aufrufen, \u00fcblicherweise benutzt man pip aber \u00fcber das Terminal.": [[15, "um-bibliotheken-von-pypi-zu-installieren-kannst-du-pip-verwenden-du-kannst-pip-direkt-aus-python-heraus-in-deinem-notebook-aufrufen-ublicherweise-benutzt-man-pip-aber-uber-das-terminal"], [16, "um-bibliotheken-von-pypi-zu-installieren-kannst-du-pip-verwenden-du-kannst-pip-direkt-aus-python-heraus-in-deinem-notebook-aufrufen-ublicherweise-benutzt-man-pip-aber-uber-das-terminal"]], "Um eine Bibliothek oder ein Modul zu installieren, muss der Befehl import verwendet werden und der Name der Bibliohek und an Alias angegeben werden:": [[15, "um-eine-bibliothek-oder-ein-modul-zu-installieren-muss-der-befehl-import-verwendet-werden-und-der-name-der-bibliohek-und-an-alias-angegeben-werden"], [16, "um-eine-bibliothek-oder-ein-modul-zu-installieren-muss-der-befehl-import-verwendet-werden-und-der-name-der-bibliohek-und-an-alias-angegeben-werden"]], "Variablentypen / Datentypen": [[5, "variablentypen-datentypen"], [8, null], [8, "id1"], [14, "variablentypen-datentypen"]], "Wir k\u00f6nnen \u00fcber pandas auch .csv- oder .xlsx-Dateien, die wir normalerweise mit Excel \u00f6ffnen w\u00fcrden einlesen und ebenfalls in einem DataFrame darstellen lassen, um mit den Daten zu arbeiten. z.B. so:": [[17, "wir-konnen-uber-pandas-auch-csv-oder-xlsx-dateien-die-wir-normalerweise-mit-excel-offnen-wurden-einlesen-und-ebenfalls-in-einem-dataframe-darstellen-lassen-um-mit-den-daten-zu-arbeiten-z-b-so"]], "by=\u201dAlter\u201d gibt an, aus welcher Spalte die Werte zur Sortierung entnommen werden sollen, ascending=False kehrt die Sortierung (ascending - aufsteigend) um, sodass das Alter absteigend sortiert wird. ascending=True w\u00fcrde die Werte aufsteigend sortieren. mit der Erstellung der neuen Variable df_sorted haben wir einen neuen DataFrame erstellt. H\u00e4tten wir einfach wieder die Variable df verwendet, h\u00e4tten wir unseren ersten DataFrame \u00fcberschrieben. Es ist wichtig, das im Hinterkopf zu behalten, um den urspr\u00fcnglichen DataFrame oder bestimmte berarbeitete DataFrames zu erhalten, sofern das relevant f\u00fcr die eigene Datenverarbeitung ist. Unser neuer DataFrame sieht nun so aus:": [[17, "by-alter-gibt-an-aus-welcher-spalte-die-werte-zur-sortierung-entnommen-werden-sollen-ascending-false-kehrt-die-sortierung-ascending-aufsteigend-um-sodass-das-alter-absteigend-sortiert-wird-ascending-true-wurde-die-werte-aufsteigend-sortieren-mit-der-erstellung-der-neuen-variable-df-sorted-haben-wir-einen-neuen-dataframe-erstellt-hatten-wir-einfach-wieder-die-variable-df-verwendet-hatten-wir-unseren-ersten-dataframe-uberschrieben-es-ist-wichtig-das-im-hinterkopf-zu-behalten-um-den-ursprunglichen-dataframe-oder-bestimmte-berarbeitete-dataframes-zu-erhalten-sofern-das-relevant-fur-die-eigene-datenverarbeitung-ist-unser-neuer-dataframe-sieht-nun-so-aus"]], "numerische Datentypen": [[5, null]], "\u00dcbung 1": [[2, null]]}, "docnames": ["index", "notebooks/01_01_arithmetik", "notebooks/01_02_01_uebung_1", "notebooks/01_02_variablen", "notebooks/01_1_arithmetik_und_variablen", "notebooks/02_01_01_numerische_datentypen", "notebooks/02_01_02_strings", "notebooks/02_01_03_booleans", "notebooks/02_01_variablentypen_datentypen", "notebooks/02_02_01_listen", "notebooks/02_02_02_tupel", "notebooks/02_02_03_sets", "notebooks/02_02_04_dictionaries", "notebooks/02_02_collections_fuer_variablen", "notebooks/02_2_datentypen", "notebooks/03_01_bibliotheken_installieren", "notebooks/03_3_module", "notebooks/04_4_pandas_und_matplotlib"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["index.md", "notebooks/01_01_arithmetik.ipynb", "notebooks/01_02_01_uebung_1.ipynb", "notebooks/01_02_variablen.ipynb", "notebooks/01_1_arithmetik_und_variablen.ipynb", "notebooks/02_01_01_numerische_datentypen.ipynb", "notebooks/02_01_02_strings.ipynb", "notebooks/02_01_03_booleans.ipynb", "notebooks/02_01_variablentypen_datentypen.ipynb", "notebooks/02_02_01_listen.ipynb", "notebooks/02_02_02_tupel.ipynb", "notebooks/02_02_03_sets.ipynb", "notebooks/02_02_04_dictionaries.ipynb", "notebooks/02_02_collections_fuer_variablen.ipynb", "notebooks/02_2_datentypen.ipynb", "notebooks/03_01_bibliotheken_installieren.ipynb", "notebooks/03_3_module.ipynb", "notebooks/04_4_pandas_und_matplotlib.ipynb"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"0": [1, 3, 4, 15, 16, 17], "1": [15, 16, 17], "10": [1, 3, 4], "12": [15, 16], "16": [15, 16], "2": [1, 3, 4, 15, 16, 17], "2020": [15, 16], "2022": [15, 16], "2023": [15, 16], "2024": [15, 16], "21": 17, "23": 17, "24": [1, 3, 4, 17], "26": [15, 16, 17], "27": [1, 3, 4], "29": 17, "3": [1, 3, 4, 17], "4": [15, 16], "43": [15, 16], "5": [1, 3, 4, 5, 8, 14, 15, 16], "5599": [15, 16], "6": [1, 3, 4], "7": [15, 16], "8": [1, 3, 4, 15, 16], "9": [15, 16], "In": [15, 16], "To": [15, 16], "advic": [15, 16], "ag": 17, "alex": 17, "alreadi": [15, 16], "also": 17, "amber": 17, "anaconda3": [15, 16], "ausgeben": 17, "automatisch": [2, 10, 12, 13], "avoid": [15, 16], "b": [6, 9, 11], "being": [15, 16], "bereit": 17, "besteht": 17, "bitt": [2, 10, 12, 13], "bool": [7, 14], "b\u00fcndeln": 17, "c": [7, 14], "can": [15, 16, 17], "cell": [15, 16], "class": [5, 6, 7, 8, 9, 11, 14], "com": [15, 16], "d": 17, "dabei": 17, "data": 17, "datafran": 17, "dateutil": [15, 16], "default": [15, 16], "denen": 17, "df_stock": 17, "dictionari": 17, "directli": [15, 16], "drei": 17, "ein": 0, "einfachheit": 17, "elementen": 17, "ergeben": 17, "erg\u00e4nzen": [2, 10, 12, 13], "ersellen": 17, "erstellen": 17, "fail": [15, 16], "fix": [15, 16], "friedrich": 17, "from": [15, 16], "futur": [15, 16], "fu\u00dfbal": 17, "game": 17, "gefunden": [2, 10, 12, 13], "geht": 17, "geh\u00f6rt": 17, "gisel": 17, "github": [15, 16], "gleich": 17, "gt": [15, 16], "h": 17, "halber": 17, "hello": [6, 9, 11, 14], "hobbi": 17, "home": [15, 16], "inhalt": [2, 10, 12, 13], "instead": [15, 16], "invalid": [15, 16], "invok": [15, 16], "issu": [15, 16], "jede": 17, "jetzt": 17, "kapitel": 0, "lesen": 17, "lib": [15, 16], "line": [15, 16], "link": 0, "listen": 17, "logisch": 17, "m": [15, 16], "main": [15, 16], "mehreren": 17, "name": 17, "namen": 17, "nicht": [2, 10, 12, 13], "numexpr": [15, 16], "numpi": [15, 16], "old": [15, 16], "paar": 17, "paaren": 17, "packag": [15, 16], "pd": 17, "person": 17, "pleas": [15, 16], "plt": [15, 16], "posit": 17, "post0": [15, 16], "potenzierung": [1, 3, 4], "print": [5, 6, 7, 8, 9, 11, 14, 17], "problem": [15, 16], "pypa": [15, 16], "pyplot": [15, 16], "python3": [15, 16], "pytz": [15, 16], "requir": [15, 16], "run": [15, 16], "satisfi": [15, 16], "schl\u00fcssel": 17, "script": [15, 16], "see": [15, 16], "sich": 17, "singen": 17, "site": [15, 16], "six": [15, 16], "spalten": 17, "str": [6, 9, 11, 14], "struktur": 17, "syntax": [15, 16], "syntaxerror": [15, 16], "thi": [15, 16], "thread": [15, 16], "tim": [15, 16], "type": [6, 9, 11], "tzdata": [15, 16], "un": 17, "underli": [15, 16], "version": [15, 16], "vielen": 17, "warn": [15, 16], "wie": 17, "willkommen": 0, "world": [6, 9, 11, 14], "wrapper": [15, 16], "w\u00e4hle": 0, "x": [5, 8], "y": [5, 8, 14], "you": [15, 16], "zugeordnet": 17, "zun\u00e4chst": 17, "zusammen": 17, "\u00e4hnlich": 17}, "titles": ["Tutorial", "1. Arithmetik und Variablen", "\u00dcbung 1", "1. Arithmetik und Variablen", "1. Arithmetik und Variablen", "numerische Datentypen", "Strings", "Booleans", "Variablentypen / Datentypen", "Listen", "Tupel", "Sets", "Dictionaries", "Collections f\u00fcr Variablen", "2. Datentypen", "3. Module", "3. Module", "4. pandas und matplotlib"], "titleterms": {"1": [1, 2, 3, 4], "2": 14, "3": [15, 16], "4": [7, 14, 17], "In": [1, 3, 4, 5, 8, 14, 17], "aber": [1, 3, 4, 6, 9, 11, 14, 15, 16], "abgerufen": [15, 16], "abgespeichert": [14, 17], "abspeichern": 17, "absteigend": 17, "addit": [1, 3, 4], "akti": 17, "al": [1, 3, 4, 5, 7, 8, 14], "alia": [15, 16], "all": [1, 3, 4, 5, 8, 14, 15, 16], "allerd": [15, 16], "also": [1, 3, 4, 5, 7, 8, 14], "alter": 17, "am": [15, 16], "an": [15, 16, 17], "analys": [15, 16], "analysieren": 17, "anderen": [15, 16], "anf\u00fchrungszeichen": [6, 9, 11, 14], "angeben": [5, 8, 14], "angegeben": [15, 16], "annehmen": [7, 14], "anpassen": [15, 16], "anschlie\u00dfend": 17, "arbeiten": 17, "arbeitet": [15, 16], "arithmetik": [1, 3, 4], "ascend": 17, "au": [15, 16, 17], "auch": [1, 3, 4, 6, 7, 9, 11, 14, 15, 16, 17], "auf": [5, 8, 14, 15, 16], "aufgaben": [1, 3, 4], "aufrufen": [15, 16], "aufsteigend": 17, "ausgab": [1, 3, 4], "ausgeben": [5, 8, 14], "ausgef\u00fchrt": [1, 3, 4], "aussag": [7, 14], "aussehen": 17, "automatisch": [5, 8, 14], "b": [7, 14, 17], "basal": [1, 3, 4], "basierend": [5, 8, 14], "bedingungsanweisungen": [7, 14], "befehl": [1, 3, 4, 15, 16], "behalten": 17, "beid": [15, 16], "beiden": 17, "beim": [5, 8, 14], "beispiel": [5, 8, 14], "beispielhaft": 17, "benutzt": [15, 16], "berarbeitet": 17, "berechnungen": [1, 3, 4], "bereit": [14, 15, 16], "bespiel": [1, 3, 4], "besseren": [1, 3, 4], "bestimmt": 17, "bestimmten": 17, "betrachten": [7, 14], "bevor": [15, 16], "bibliohek": [15, 16], "bibliothek": [15, 16], "bibliotheken": [15, 16, 17], "boolean": [7, 14], "bpsw": 17, "buchstaben": [6, 9, 11, 14], "bzw": [14, 15, 16], "code": [1, 3, 4, 15, 16], "collect": 13, "csv": 17, "d": [1, 3, 4, 7, 14, 15, 16], "da": [1, 3, 4, 5, 8, 14, 15, 16, 17], "dann": [7, 14], "darstellen": 17, "dass": [1, 3, 4], "datafram": 17, "datei": 17, "dateien": 17, "daten": 17, "datentyp": [5, 7, 8, 14], "datentypen": [5, 8, 14], "datenverarbeitung": [15, 16, 17], "datenypen": [5, 8, 14], "dein": [15, 16], "deinem": [15, 16], "deinen": [1, 3, 4], "dem": [1, 3, 4, 5, 8, 14], "dementsprechend": 17, "den": [5, 7, 8, 14, 17], "der": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17], "dezimalzahlen": [5, 8, 14], "dezimalzeichen": [5, 8, 14], "df": 17, "df_sort": 17, "di": [7, 14], "dictionari": 12, "die": [5, 6, 7, 8, 9, 11, 14, 15, 16, 17], "dies": [15, 16], "diesem": [14, 17], "diesen": [7, 14], "dieser": [15, 16], "dir": [5, 8, 14, 15, 16], "direkt": [1, 3, 4, 15, 16], "divis": [1, 3, 4], "doppelt": [6, 9, 11, 14], "du": [1, 3, 4, 5, 7, 8, 14, 15, 16], "dynamisch": [5, 8, 14], "e": [5, 8, 14, 15, 16, 17], "ebenfal": 17, "eigen": 17, "ein": [1, 3, 4, 5, 7, 8, 14, 15, 16, 17], "einem": 17, "einen": 17, "einer": [5, 8, 14, 17], "einfach": [6, 9, 11, 14, 17], "einig": [1, 3, 4], "einlesen": 17, "einmal": [15, 16], "einschlie\u00dft": [6, 9, 11, 14], "els": [7, 14], "enthalten": [15, 16], "enth\u00e4lt": 17, "entnommen": 17, "entsprechend": [15, 16], "entwed": [7, 14], "erhalten": 17, "erkennt": [5, 8, 14], "erkl\u00e4rung": [1, 3, 4], "erstellen": [5, 8, 14], "erstellt": [6, 9, 11, 14, 17], "erstellung": 17, "ersten": [14, 17], "erzeugen": [1, 3, 4], "excel": 17, "exemplarisch": [15, 16], "explizit": [5, 8, 14], "fall": 17, "fals": [7, 14, 17], "filtern": 17, "findest": [1, 3, 4], "flie\u00dfkommazahlen": [5, 8, 14], "float": [5, 8, 14], "folgenden": [1, 3, 4], "form": 17, "fortgeschritten": [7, 14], "funktion": [1, 3, 4, 5, 7, 8, 14, 17], "funktionen": [15, 16], "f\u00fcr": [1, 3, 4, 5, 8, 13, 14, 15, 16, 17], "ganz": [1, 3, 4, 14, 17], "ganzzahlen": [5, 8, 14], "gibt": [5, 8, 14, 15, 16, 17], "gilt": [5, 8, 14], "grund": [15, 16], "grundlegendsten": [1, 3, 4], "grunds\u00e4tzlich": [5, 8, 14], "gr\u00f6\u00dfer": [7, 14], "g\u00e4ngigsten": 14, "h": [1, 3, 4, 7, 14], "haben": 17, "hast": 14, "hat": [5, 8, 14], "herau": [15, 16], "hier": [5, 6, 8, 9, 11, 14, 15, 16], "hilfreich": [1, 3, 4], "hinter": [1, 3, 4], "hinterkopf": 17, "hinwei": [5, 8, 14], "hinzuzuf\u00fcgen": [1, 3, 4], "http": [15, 16], "h\u00e4tten": 17, "h\u00e4ufig": [7, 14], "i": [15, 16], "ihn": [15, 16], "ihnen": 17, "im": [14, 15, 16, 17], "import": [15, 16], "importieren": [15, 16], "importiert": 17, "indem": [6, 9, 11, 14], "insbesonder": [15, 16], "instal": [15, 16], "installieren": [15, 16], "int": [5, 8, 14], "integ": 14, "ist": [5, 7, 8, 14, 17], "jetzt": [15, 16], "kann": [1, 3, 4, 7, 14, 15, 16, 17], "kannst": [1, 3, 4, 5, 7, 8, 14, 15, 16], "kapitel": 14, "kehrt": 17, "kein": [5, 8, 14], "kennen": 14, "kennengelernt": 14, "kennst": [5, 8, 14], "komma": [5, 8, 14], "kommentieren": [1, 3, 4], "kommmentar": [1, 3, 4], "komplexer": [1, 3, 4], "kursver\u00e4nderung": 17, "k\u00f6nnen": [14, 15, 16, 17], "k\u00f6nnte": 17, "k\u00fcrzel": [15, 16], "lassen": [1, 3, 4, 5, 8, 14, 17], "lernst": 14, "listen": 9, "loc": 17, "man": [6, 9, 11, 14, 15, 16, 17], "matplotlib": [15, 16, 17], "meisten": [15, 16], "mit": [5, 7, 8, 14, 15, 16, 17], "modul": [15, 16], "modulen": [15, 16], "multiplik": [1, 3, 4], "muss": [15, 16], "musst": [5, 8, 14, 15, 16], "nach": 17, "name": [15, 16], "nehmen": 17, "neu": [15, 16], "neuen": 17, "neuer": 17, "nicht": [1, 3, 4, 5, 7, 8, 14, 15, 16], "noch": [15, 16], "normalerweis": 17, "notebook": [15, 16], "numerisch": [5, 8, 14], "nun": 17, "nur": [5, 7, 8, 14, 17], "nutzen": [15, 16], "nutzern": [15, 16], "oder": [6, 7, 9, 11, 14, 15, 16, 17], "onlin": [15, 16], "org": [15, 16], "panda": [15, 16, 17], "pd": [15, 16], "pip": [15, 16], "print": [1, 3, 4], "programmieren": [15, 16], "punkt": [5, 8, 14], "pypi": [15, 16], "python": [1, 3, 4, 5, 8, 14, 15, 16], "r": [15, 16], "relev": 17, "repr\u00e4sentieren": [7, 14], "sauberen": 17, "schon": [5, 7, 8, 14, 15, 16], "sehen": 17, "sehr": [1, 3, 4, 15, 16], "seinen": [1, 3, 4], "set": 11, "sie": [7, 14], "sieht": 17, "sind": [1, 3, 4, 6, 7, 9, 11, 14, 15, 16, 17], "so": [6, 9, 11, 14, 17], "sodass": 17, "sofern": 17, "sog": 17, "solch": [1, 3, 4], "sollen": 17, "sort_valu": 17, "sortieren": 17, "sortiert": 17, "sortierung": 17, "spalt": 17, "sprach": [5, 8, 14], "standardvers": [15, 16], "string": [6, 9, 11, 14], "subtrakt": [1, 3, 4], "symbol": [1, 3, 4, 6, 9, 11, 14], "tabellarisch": 17, "tabellarischen": 17, "taschenrechn": [1, 3, 4], "technik": [7, 14], "termin": [15, 16], "true": [7, 14, 17], "tue": [7, 14], "tupel": 10, "tutori": 0, "type": [5, 7, 8, 14], "um": [1, 3, 4, 15, 16, 17], "umgesetzt": [15, 16], "umwandeln": 17, "und": [1, 3, 4, 5, 8, 14, 15, 16, 17], "unser": 17, "unseren": 17, "unter": 17, "urspr\u00fcnglichen": 17, "usw": [6, 9, 11, 14], "variabl": [5, 8, 14, 17], "variablen": [1, 3, 4, 5, 8, 13, 14, 17], "variablentypen": [5, 8, 14], "verschieden": 14, "verschiedenen": [15, 16], "verst\u00e4ndni": [1, 3, 4], "verwenden": [1, 3, 4, 15, 16, 17], "verwendet": [1, 3, 4, 7, 14, 15, 16, 17], "verwendeten": [15, 16], "ver\u00f6ffentlicht": [15, 16], "ver\u00f6ffentlichungen": [15, 16], "viel": [15, 16], "visualisieren": 17, "visualisierung": [15, 16], "von": [15, 16, 17], "vorinstalliert": [15, 16], "wahrheitswert": [7, 14], "wege": [15, 16], "weitau": [1, 3, 4], "weiter": [14, 15, 16], "welchen": [5, 8, 14], "welcher": 17, "wenn": [7, 14, 15, 16, 17], "werden": [1, 3, 4, 6, 7, 9, 11, 14, 15, 16, 17], "wert": [5, 7, 8, 14, 17], "werten": 17, "wichtig": [5, 8, 14, 17], "wie": [1, 3, 4, 6, 9, 11, 14], "wieder": 17, "wir": [7, 14, 15, 16, 17], "wird": [1, 3, 4, 17], "wobei": [1, 3, 4], "wollen": 17, "wurd": [15, 16], "w\u00fcrde": 17, "w\u00fcrden": 17, "x": [7, 14], "xlsx": 17, "z": [7, 14, 17], "zahlen": [6, 9, 11, 14], "zeichenfolg": [6, 9, 11, 14], "zeichenfolgen": [6, 9, 11, 14], "zeigen": [15, 16], "zeitpunkten": 17, "zeitraum": 17, "zeitstempel": 17, "zell": [1, 3, 4], "zu": [1, 3, 4, 15, 16, 17], "zugewiesenen": [5, 8, 14], "zum": [1, 3, 4], "zun\u00e4chst": [7, 14, 15, 16], "zur": [15, 16, 17], "zweck": [15, 16], "zwei": [5, 7, 8, 14], "\u00f6ffnen": 17, "\u00fcber": [15, 16, 17], "\u00fcberpr\u00fcfen": [7, 14], "\u00fcberschrieben": 17, "\u00fcblicherweis": [15, 16], "\u00fcbung": 2}})